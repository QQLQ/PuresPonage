#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#define NSIZE 20
#define MSIZE 12

struct pass_stru {
    int numb;
    int booked;
    char fname[NSIZE];
    char lname[NSIZE];
        };

struct pass_stru pass[12];

char getchoice(void);
void afunc(void);
void bfunc(void);
void cfunc(void);
void dfunc(void);
void efunc(void);
void ffunc(void);
FILE* open(void);
FILE* write(void);
void read(void);
char* sgets(char*line,int size);

int main(void)
{   
    char ch;
  read();
  while (ch=getchoice()) 
   {
     switch (ch)
     {
      case 'a':
      case 'A': afunc(); break;
      case 'b':       
      case 'B': bfunc(); break;        
      case 'c':        
      case 'C': cfunc(); break;        
      case 'd':        
      case 'D': dfunc(); break;       
      case 'e':        
      case 'E': efunc(); break;       
      case 'f':        
      case 'F': ffunc(); break;
     } 
    }
       
return 0;
}

char* sgets(char*line,int size)
{  
   char *p,*find;
   p=fgets(line,size,stdin);
   
   if (p)
   {  
    find=strchr(line,'\n');
    if (find)
      *find='\0';
    else 
      while (getchar()!='\n');
    }
return p;
}  

FILE* open(void)
{
    FILE *pf;
if ( (pf=fopen("passA.dat","rb"))==NULL){
    fprintf(stderr,"Unable to open file passA.dat.");
    if ( (pf=fopen("passA.dat","w+b"))==NULL){
        fprintf(stderr,"Also unable to creat new passA.dat.");
        exit(EXIT_FAILURE);
        }
     fprintf(stderr,"New passA.dat created.\n");
    }
return pf;
}

FILE* write(void)
{
    FILE *pf;
if ( (pf=fopen("passA.dat","wb"))==NULL){
    fprintf(stderr,"Unable to open file passA.dat.");
    if ( (pf=fopen("passA.dat","wb"))==NULL){
        fprintf(stderr,"Also unable to creat new passA.dat.");
        exit(EXIT_FAILURE);
        }
     fprintf(stderr,"New passA.dat created.\n");
    }
return pf;
}

void read(void)
{   int i,count;
    count==0;
    FILE*pf;
    pf=open();
    for (i=0;i<MSIZE;i++)
     { 
       if (fread(&pass[i],sizeof(struct pass_stru),1,pf)==1)
         count++;
       if (count==0)
         {
          if (i==0)
            printf("No data inside passA.dat.Data initialized.\n");
          pass[i].booked=0;
          pass[i].numb=i+1;
          fwrite(&pass[i],sizeof(struct pass_stru),1,pf);
         }
     }
fclose(pf);
return;
}              

char getchoice(void)
{  
    char ch;
    printf("To choose a function, enter its letter label:\n");
    printf("a)Show number of empty seats\n");
    printf("b)Show list of empty seats\n");
    printf("c)show alphabetical list of seats\n");
    printf("d)Assign a customer to a seat assignment\n");
    printf("e)Dlete a seat assignment\n");
    printf("f)quit\n");
      
    while (scanf("%c",&ch))
    { while (getchar()!='\n'); 
      if (strchr("abcdefABCDEF",ch))
          break;
      printf("The choice is from a to f(or A to F).Please reenter\n");
    }

return ch;
}
   
void afunc(void)
{ int i,x;
  x=0;
  for (i=0;i<MSIZE;i++)
    {
     if (pass[i].booked==0)
      x++;
    }

printf("%d empty seats remaining.\n",x);

return;
}
void bfunc(void)
{  int i,x;
   x=0;
   for (i=0;i<MSIZE;i++)
    { 
      if (pass[i].booked==0)
       { 
        if (x==0)
          printf("Empty seats are as folowing:\n");
        x++;
        printf("Seat NO.%d:%s %s\n",pass[i].numb,pass[i].fname,pass[i].lname);
       }
     }
if (x==0)
  printf("All seats have been booked.\n");
else
  printf("%d seats have booked,%d empty seat reamin.\n",MSIZE-x,x);

return;
}

void cfunc(void)
{
   struct pass_stru alph[12];
   struct pass_stru temp;
   int i,x,booked;
   booked=0;

   for (i=0;i<MSIZE;i++)
    alph[i]=pass[i];
   
   for (i=0;i<MSIZE;i++)
     for (x=i+1;x<MSIZE;x++)
       {
        if (strcmp(alph[i].fname,alph[x].fname)>0)
           {
            temp=alph[i];
            alph[i]=alph[x];
            alph[x]=temp;
            }
        else if (strcmp(alph[i].fname,alph[x].fname)==0)
             if (strcmp(alph[i].lname,alph[x].lname)>0)
               {
                temp=alph[i];
                alph[i]=alph[x];
                alph[x]=temp;
               }
         }
  
   for (i=0;i<MSIZE;i++)
     {
      if (alph[i].booked==1)
        {
         if (booked==0)
           printf("Alphabetical list of seats are as following:\n");
         booked++;
         printf("Seat NO.%d:%s %s\n",alph[i].numb,alph[i].fname,alph[i].lname);
         }
      }
   
    if (booked==0)
        printf("No seats booked.\n");
 
return;
}

void dfunc(void)
{
  FILE *pf;
  int numb;
  int seat;
  int i;
  char ch;
  char tempfname[NSIZE],templname[NSIZE];
  
  for (i=0;i<MSIZE;i++)
    printf("Seat No.%d:%s %s\n",pass[i].numb,pass[i].fname,pass[i].lname);
  afunc();  
  while (puts("Please enter the seat you wanna assgin to(press any letter to quit):"),scanf("%d",&numb)==1)
    {
     while (getchar()!='\n');
     if ( !(numb>=1&&numb<=MSIZE))
       {      
        printf("The seat number must be from 0 to %d.Please enter again.\n",MSIZE);
        continue;
        }
     printf("Please enter the first name for seat NO.%d:\n",numb);
     if (sgets(tempfname,NSIZE)!=NULL&&tempfname[0]!='\0')
        {
          printf("Please enter the last name for seat NO.%d:\n",numb);
          if (sgets(templname,NSIZE)!=NULL&&templname[0]!='\0')
            {
             strcpy(pass[numb-1].fname,tempfname);
             strcpy(pass[numb-1].lname,templname);
             pass[numb-1].booked=1;
             pf=write();
             for (int i=0;i<MSIZE;i++)
                 fwrite(&pass[i],sizeof(struct pass_stru),1,pf);
             fclose(pf);
            }
          else if (templname[0]=='\0')
            {
            puts("Last name must be entered.");
            continue;
            }
         }       
     else if (tempfname[0]=='\0')
        {
         puts("First name must be entered.");
         continue;
         }
     for (i=0;i<MSIZE;i++)
         printf("Seat No.%d:%s %s\n",pass[i].numb,pass[i].fname,pass[i].lname);
    }
     while (getchar()!='\n');

return;
}

void efunc(void)
{
   FILE*pf;
   int numb,i;
   for (i=0;i<MSIZE;i++)
     printf("Seat No.%d:%s %s\n",pass[i].numb,pass[i].fname,pass[i].lname);
   while (printf("Please enter the number that you wanna delete to."),
          printf("(press any letter to quit)\n"),
          scanf("%d",&numb)==1)
     {
      pass[numb-1].booked=0;
      pass[numb-1].fname[0]='\0',
      pass[numb-1].lname[0]='\0',
      pf=write();
      for (i=0;i<MSIZE;i++)      
         fwrite(&pass[i],sizeof(struct pass_stru),1,pf);
      fclose(pf);
      }

return;
}

void ffunc(void)
{
 puts("Have a nice day then,Bye!");
 exit(EXIT_SUCCESS);
return;
}
